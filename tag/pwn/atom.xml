<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://0d0-1yp0.github.io</id>
    <title>we1c0me_t0 my odyssey domain</title>
    <subtitle>&#34; 一切选择，都有其意义 &#34; —— 《VALORANT》 ISO</subtitle>
    <icon>https://0d0-1yp0.github.io/assets/favicon.ico</icon>
    <link href="https://0d0-1yp0.github.io" />
    <author>
      <name>0d0_1yp0</name>
    </author>
    <updated>2024-12-19T16:00:00.000Z</updated>
    <entry>
        <id>https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/</id>
        <title>pwndbg操作方式个人总结（一）</title>
        <link rel="alternate" href="https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;h1 id=&#34;将-pwndbg-输出重定向到另一个终端tty&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-pwndbg-输出重定向到另一个终端tty&#34;&gt;#&lt;/a&gt; 将 pwndbg 输出重定向到另一个终端（TTY）：&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;打开另一个终端&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;启动一个新的终端窗口或在当前终端中使用  &lt;code&gt;tmux&lt;/code&gt; 、 &lt;code&gt;screen&lt;/code&gt;  等工具分割出新的窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用  &lt;code&gt;tty&lt;/code&gt;  命令获取该终端的设备文件路径。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;tty&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/dev/pts/1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 pwndbg 中设置输出重定向&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 GDB（pwndbg）中输入以下命令，将上下文输出重定向到新的终端：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gdb&#34;&gt;set context-output /dev/pts/1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在，pwndbg 的上下文信息（如  &lt;code&gt;context&lt;/code&gt;  命令的输出）将显示在  &lt;code&gt;/dev/pts/1&lt;/code&gt;  对应的终端中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;恢复默认设置（可选）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;想将输出恢复到默认终端，可以使用：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gdb&#34;&gt;set context-output /dev/tty
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pwndbg的基础操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg的基础操作&#34;&gt;#&lt;/a&gt; pwndbg 的基础操作:&lt;/h1&gt;
&lt;p&gt;附上一个佬的原文链接，写的真的很厉害 ovo 就不重复赘述了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.csdn.net/XiDPPython/article/details/142690569&#34;&gt;https://blog.csdn.net/XiDPPython/article/details/142690569&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;pwndbg-额外操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg-额外操作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Pwndbg&lt;/strong&gt; 额外操作&lt;/h1&gt;
&lt;p&gt;特别适用于逆向工程和漏洞利用。以下是一些常用的 pwndbg 命令及其用途：&lt;/p&gt;
&lt;h3 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;context&lt;/code&gt; （或  &lt;code&gt;ctx&lt;/code&gt; ）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前调试的上下文信息，包括寄存器、堆栈、代码和内存映射等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;context&lt;/code&gt; ：显示默认的上下文信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context code&lt;/code&gt; ：仅显示代码段的反汇编。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context regs&lt;/code&gt; ：仅显示寄存器信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context stack&lt;/code&gt; ：仅显示堆栈内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context all&lt;/code&gt; ：显示所有可用的上下文信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;hexdump&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以十六进制形式显示内存内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexdump ADDRESS&lt;/code&gt; ：从指定地址开始显示内存内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;telescope&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类似于  &lt;code&gt;hexdump&lt;/code&gt; ，但提供更友好的内存查看方式，自动解析指针和字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;telescope ADDRESS&lt;/code&gt; ：从指定地址开始显示内存内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;vmmap&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前进程的内存映射信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmmap&lt;/code&gt; ：列出所有内存段及其权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;search&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在内存中搜索特定的字节序列或模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;search PATTERN&lt;/code&gt; ：搜索指定的模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;pie&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;处理位置无关可执行文件（PIE）的相关命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pie breakpoint OFFSET&lt;/code&gt; ：在偏移地址处设置断点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;rop&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帮助查找 ROP（Return-Oriented Programming）小工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rop&lt;/code&gt; ：列出可用的 ROP 小工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;got&lt;/code&gt;  和  &lt;code&gt;plt&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看全局偏移量表（GOT）和过程链接表（PLT）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;got&lt;/code&gt; ：显示 GOT 表信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plt&lt;/code&gt; ：显示 PLT 表信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;aslr&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制地址空间布局随机化（ASLR）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;aslr on&lt;/code&gt; ：启用 ASLR。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aslr off&lt;/code&gt; ：禁用 ASLR。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;elf-info&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前可执行文件的 ELF 格式信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;elf-info&lt;/code&gt; ：显示 ELF 文件的段和节信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pwndbg积累操作本人个人经常会用到的一些操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg积累操作本人个人经常会用到的一些操作&#34;&gt;#&lt;/a&gt; pwndbg 积累操作 (本人个人经常会用到的一些操作)&lt;/h1&gt;
&lt;h3 id=&#34;gdb-info-functions-win&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdb-info-functions-win&#34;&gt;#&lt;/a&gt; &lt;strong&gt;(&lt;strong&gt;gdb&lt;/strong&gt;)&lt;/strong&gt; &lt;strong&gt;info&lt;/strong&gt; &lt;strong&gt;functions&lt;/strong&gt; &lt;strong&gt;win&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All&lt;/strong&gt; &lt;strong&gt;functions&lt;/strong&gt; &lt;strong&gt;matching&lt;/strong&gt; &lt;strong&gt;regular&lt;/strong&gt; &lt;strong&gt;expression&lt;/strong&gt; &lt;strong&gt;&amp;quot;win&amp;quot;&lt;/strong&gt;:  &lt;strong&gt;Non&lt;/strong&gt;-&lt;strong&gt;debugging&lt;/strong&gt; &lt;strong&gt;symbols:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;x080484cb  &lt;strong&gt;win&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还会更新&lt;/p&gt;
</content>
        <category term="CTF" scheme="https://0d0-1yp0.github.io/categories/CTF/" />
        <category term="二进制安全" scheme="https://0d0-1yp0.github.io/categories/CTF/binary/" />
        <category term="二进制漏洞PWN" scheme="https://0d0-1yp0.github.io/categories/CTF/binary/PWN/" />
        <category term="工具使用" scheme="https://0d0-1yp0.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/" />
        <category term="CTF" scheme="https://0d0-1yp0.github.io/tags/CTF/" />
        <category term="二进制" scheme="https://0d0-1yp0.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/" />
        <category term="pwn" scheme="https://0d0-1yp0.github.io/tags/pwn/" />
        <updated>2024-12-19T16:00:00.000Z</updated>
    </entry>
</feed>
