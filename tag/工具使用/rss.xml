<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>we1c0me_t0 my odyssey domain</title>
        <subtitle>&#34; 一切选择，都有其意义 &#34; —— 《VALORANT》 ISO</subtitle>
        <icon>https://0d0-1yp0.github.io/assets/favicon.ico</icon>
        <link>https://0d0-1yp0.github.io</link>
        <author>
          <name>0d0_1yp0</name>
        </author>
        <description>ps:当前站版本v1.12。右上角可以切换日夜主题。手机端左上角是功能栏。遇到长时间加载是bug需要刷新。目前文章只往csdn搬https://blog.csdn.net/2201_75506722?type=blog</description>
        <language>zh-cn</language>
        <pubDate>Fri, 20 Dec 2024 00:00:00 +0800</pubDate>
        <lastBuildDate>Fri, 20 Dec 2024 00:00:00 +0800</lastBuildDate>
        <category term="D1yp" />
        <category term="D_1yp" />
        <category term="0d0-1yp0" />
        <item>
            <guid isPermalink="true">https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/</guid>
            <title>pwndbg操作方式个人总结（一）</title>
            <link>https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/</link>
            <category term="CTF" scheme="https://0d0-1yp0.github.io/categories/CTF/" />
            <category term="二进制安全" scheme="https://0d0-1yp0.github.io/categories/CTF/binary/" />
            <category term="二进制漏洞PWN" scheme="https://0d0-1yp0.github.io/categories/CTF/binary/PWN/" />
            <category term="工具使用" scheme="https://0d0-1yp0.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/" />
            <category term="CTF" scheme="https://0d0-1yp0.github.io/tags/CTF/" />
            <category term="二进制" scheme="https://0d0-1yp0.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/" />
            <category term="pwn" scheme="https://0d0-1yp0.github.io/tags/pwn/" />
            <pubDate>Fri, 20 Dec 2024 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;将-pwndbg-输出重定向到另一个终端tty&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-pwndbg-输出重定向到另一个终端tty&#34;&gt;#&lt;/a&gt; 将 pwndbg 输出重定向到另一个终端（TTY）：&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;打开另一个终端&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;启动一个新的终端窗口或在当前终端中使用  &lt;code&gt;tmux&lt;/code&gt; 、 &lt;code&gt;screen&lt;/code&gt;  等工具分割出新的窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用  &lt;code&gt;tty&lt;/code&gt;  命令获取该终端的设备文件路径。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;tty&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/dev/pts/1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 pwndbg 中设置输出重定向&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 GDB（pwndbg）中输入以下命令，将上下文输出重定向到新的终端：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gdb&#34;&gt;set context-output /dev/pts/1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在，pwndbg 的上下文信息（如  &lt;code&gt;context&lt;/code&gt;  命令的输出）将显示在  &lt;code&gt;/dev/pts/1&lt;/code&gt;  对应的终端中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;恢复默认设置（可选）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;想将输出恢复到默认终端，可以使用：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gdb&#34;&gt;set context-output /dev/tty
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pwndbg的基础操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg的基础操作&#34;&gt;#&lt;/a&gt; pwndbg 的基础操作:&lt;/h1&gt;
&lt;p&gt;附上一个佬的原文链接，写的真的很厉害 ovo 就不重复赘述了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.csdn.net/XiDPPython/article/details/142690569&#34;&gt;https://blog.csdn.net/XiDPPython/article/details/142690569&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;pwndbg-额外操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg-额外操作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Pwndbg&lt;/strong&gt; 额外操作&lt;/h1&gt;
&lt;p&gt;特别适用于逆向工程和漏洞利用。以下是一些常用的 pwndbg 命令及其用途：&lt;/p&gt;
&lt;h3 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;context&lt;/code&gt; （或  &lt;code&gt;ctx&lt;/code&gt; ）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前调试的上下文信息，包括寄存器、堆栈、代码和内存映射等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;context&lt;/code&gt; ：显示默认的上下文信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context code&lt;/code&gt; ：仅显示代码段的反汇编。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context regs&lt;/code&gt; ：仅显示寄存器信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context stack&lt;/code&gt; ：仅显示堆栈内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context all&lt;/code&gt; ：显示所有可用的上下文信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;hexdump&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以十六进制形式显示内存内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexdump ADDRESS&lt;/code&gt; ：从指定地址开始显示内存内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;telescope&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;类似于  &lt;code&gt;hexdump&lt;/code&gt; ，但提供更友好的内存查看方式，自动解析指针和字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;telescope ADDRESS&lt;/code&gt; ：从指定地址开始显示内存内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;vmmap&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前进程的内存映射信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmmap&lt;/code&gt; ：列出所有内存段及其权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;search&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在内存中搜索特定的字节序列或模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;search PATTERN&lt;/code&gt; ：搜索指定的模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;pie&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;处理位置无关可执行文件（PIE）的相关命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pie breakpoint OFFSET&lt;/code&gt; ：在偏移地址处设置断点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;rop&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帮助查找 ROP（Return-Oriented Programming）小工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rop&lt;/code&gt; ：列出可用的 ROP 小工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;got&lt;/code&gt;  和  &lt;code&gt;plt&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看全局偏移量表（GOT）和过程链接表（PLT）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;got&lt;/code&gt; ：显示 GOT 表信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plt&lt;/code&gt; ：显示 PLT 表信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;aslr&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制地址空间布局随机化（ASLR）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;aslr on&lt;/code&gt; ：启用 ASLR。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aslr off&lt;/code&gt; ：禁用 ASLR。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;elf-info&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显示当前可执行文件的 ELF 格式信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用法：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;elf-info&lt;/code&gt; ：显示 ELF 文件的段和节信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;pwndbg积累操作本人个人经常会用到的一些操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwndbg积累操作本人个人经常会用到的一些操作&#34;&gt;#&lt;/a&gt; pwndbg 积累操作 (本人个人经常会用到的一些操作)&lt;/h1&gt;
&lt;h3 id=&#34;gdb-info-functions-win&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdb-info-functions-win&#34;&gt;#&lt;/a&gt; &lt;strong&gt;(&lt;strong&gt;gdb&lt;/strong&gt;)&lt;/strong&gt; &lt;strong&gt;info&lt;/strong&gt; &lt;strong&gt;functions&lt;/strong&gt; &lt;strong&gt;win&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All&lt;/strong&gt; &lt;strong&gt;functions&lt;/strong&gt; &lt;strong&gt;matching&lt;/strong&gt; &lt;strong&gt;regular&lt;/strong&gt; &lt;strong&gt;expression&lt;/strong&gt; &lt;strong&gt;&amp;quot;win&amp;quot;&lt;/strong&gt;:  &lt;strong&gt;Non&lt;/strong&gt;-&lt;strong&gt;debugging&lt;/strong&gt; &lt;strong&gt;symbols:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;x080484cb  &lt;strong&gt;win&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还会更新&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0d0-1yp0.github.io/2024/11/12/Forensics/meiyacup2024%E5%86%85%E5%AD%98%E5%A4%8D%E7%9B%98/</guid>
            <title>Meiyacup2024菜鸟个人总结（一）</title>
            <link>https://0d0-1yp0.github.io/2024/11/12/Forensics/meiyacup2024%E5%86%85%E5%AD%98%E5%A4%8D%E7%9B%98/</link>
            <category term="取证" scheme="https://0d0-1yp0.github.io/categories/Forensics/" />
            <category term="取证" scheme="https://0d0-1yp0.github.io/tags/%E5%8F%96%E8%AF%81/" />
            <category term="工具使用" scheme="https://0d0-1yp0.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/" />
            <pubDate>Tue, 12 Nov 2024 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;meiyacup2024菜鸟个人总结一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#meiyacup2024菜鸟个人总结一&#34;&gt;#&lt;/a&gt; Meiyacup2024 菜鸟个人总结（一）&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;以下内容仅用作个人复盘以及分享参考的思路。&lt;/p&gt;
&lt;p&gt;我已经菜得离谱了！！！这里没有好东西啦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;去打 2024 美亚线下了，今年比去年弱了好多好多，比赛结果非常非常差&lt;s&gt;但是也是尽力了&lt;/s&gt;一坨就是一坨&lt;/p&gt;
&lt;p&gt;比赛的时候，网断了才发现犯了非常离谱的错误，赛前明明注意到了内存取证题，但是没系统练过也没调试 volatility&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://xn--python3setup-bc3y.py&#34;&gt;python3 掉 setup.py&lt;/a&gt;, 然后发现网上教程有敲 python3 vol.py 的，然后我发现可以直接敲 vol&lt;/p&gt;
&lt;p&gt;不太懂于是复盘之后 chat 了一下&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220201123451.png&#34; alt=&#34;image-20241220201123451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;事实上还发现了依赖项问题。因为我的 kali 中又有 python2 又有 python3, 总是产生一些奇奇怪怪的问题&lt;/p&gt;
&lt;p&gt;总之以后还是多用虚拟环境吧，正好 2024 的 kali 更新规则了&lt;/p&gt;
&lt;h2 id=&#34;至于赛题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#至于赛题&#34;&gt;#&lt;/a&gt; 至于赛题:&lt;/h2&gt;
&lt;p&gt;举个赛题的例子&lt;/p&gt;
&lt;p&gt;列出 firefox 的 pid&lt;/p&gt;
&lt;p&gt;比赛的时候不联网，个人赛时间紧迫又没法看 help。只能拿本地的 llama3.1 跑一下 vol 的命令，最后给的一堆人机指令&lt;/p&gt;
&lt;p&gt;这里就丢了 10 分，后面还有一个解压然后开火眼即取的手机镜像题也没拿到分，太着急了可能是&lt;/p&gt;
&lt;p&gt;这里的 20 分拿回来就是第二了，仅次于通天戴，可惜没有如果 == 难受了一整天&lt;/p&gt;
&lt;p&gt;美亚的内存取证工具什么都出不来，火眼的连镜像都打不开，除非 vol 否则一个都跑不出来&lt;/p&gt;
&lt;p&gt;以后一定好好复习&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220200723671.png&#34; alt=&#34;image-20241220200723671&#34; /&gt;&lt;/p&gt;
&lt;p&gt;纪念一下自己人机级别蠢到家的指令&lt;/p&gt;
&lt;p&gt;正确做法：&lt;/p&gt;
&lt;p&gt;vol -f xxx.raw [plugin] -- 额外参数&lt;/p&gt;
&lt;p&gt;for example：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vol &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; RAM_Capture_David_Laptop.raw windows.info&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220201219814.png&#34; alt=&#34;image-20241220201219814&#34; /&gt;&lt;/p&gt;
&lt;p&gt;出来了，windows 信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;那么这道题的话&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol -f RAM_Capture_David_Laptop.raw windows.pslist &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者更好的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol -f RAM_Capture_David_Laptop.raw windows.pslist | grep &amp;quot;firefox.exe&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;C:%5CUsers%5C86130%5CPictures%5C%E5%9B%BE%E5%BA%8A%5Cimage-20241220201247050.png&#34; alt=&#34;image-20241220201247050&#34; /&gt;&lt;/p&gt;
&lt;p&gt;o1-pre 会给出 vol -f RAM_Capture_David_Laptop.raw pslist 这个指令，但是 vol3.x 就不行了，因为这个比赛直接炸掉了&lt;/p&gt;
&lt;p&gt;为什么有时候大脑不转呢&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
