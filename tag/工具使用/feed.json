{
    "version": "https://jsonfeed.org/version/1",
    "title": "we1c0me_t0 my odyssey domain",
    "subtitle": "\" 一切选择，都有其意义 \" —— 《VALORANT》 ISO",
    "icon": "https://0d0-1yp0.github.io/assets/favicon.ico",
    "description": "ps:当前站版本v1.11。右上角可以切换日夜主题。手机端左上角是功能栏。遇到长时间加载是bug需要刷新。目前文章只往csdn搬https://blog.csdn.net/2201_75506722?type=blog",
    "home_page_url": "https://0d0-1yp0.github.io",
    "items": [
        {
            "id": "https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/",
            "url": "https://0d0-1yp0.github.io/2024/12/20/CTF/binary/PWN/pwndbg%E7%94%A8%E6%B3%95%E5%9F%BA%E7%A1%80/",
            "title": "pwndbg操作方式个人总结（一）",
            "date_published": "2024-12-19T16:00:00.000Z",
            "content_html": "<h1 id=\"将-pwndbg-输出重定向到另一个终端tty\"><a class=\"anchor\" href=\"#将-pwndbg-输出重定向到另一个终端tty\">#</a> 将 pwndbg 输出重定向到另一个终端（TTY）：</h1>\n<ol>\n<li>\n<p><strong>打开另一个终端</strong></p>\n<ul>\n<li>\n<p>启动一个新的终端窗口或在当前终端中使用  <code>tmux</code> 、 <code>screen</code>  等工具分割出新的窗口。</p>\n</li>\n<li>\n<p>使用  <code>tty</code>  命令获取该终端的设备文件路径。例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">tty</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/dev/pts/1</pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p><strong>在 pwndbg 中设置输出重定向</strong></p>\n<ul>\n<li>\n<p>在 GDB（pwndbg）中输入以下命令，将上下文输出重定向到新的终端：</p>\n<pre><code class=\"language-gdb\">set context-output /dev/pts/1\n</code></pre>\n</li>\n<li>\n<p>现在，pwndbg 的上下文信息（如  <code>context</code>  命令的输出）将显示在  <code>/dev/pts/1</code>  对应的终端中。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>恢复默认设置（可选）</strong></p>\n<ul>\n<li>\n<p>想将输出恢复到默认终端，可以使用：</p>\n<pre><code class=\"language-gdb\">set context-output /dev/tty\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"pwndbg的基础操作\"><a class=\"anchor\" href=\"#pwndbg的基础操作\">#</a> pwndbg 的基础操作:</h1>\n<p>附上一个佬的原文链接，写的真的很厉害 ovo 就不重复赘述了</p>\n<blockquote>\n<p>原文链接：<a href=\"https://blog.csdn.net/XiDPPython/article/details/142690569\">https://blog.csdn.net/XiDPPython/article/details/142690569</a></p>\n</blockquote>\n<h1 id=\"pwndbg-额外操作\"><a class=\"anchor\" href=\"#pwndbg-额外操作\">#</a> <strong>Pwndbg</strong> 额外操作</h1>\n<p>特别适用于逆向工程和漏洞利用。以下是一些常用的 pwndbg 命令及其用途：</p>\n<h3 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令：</h3>\n<ol>\n<li>\n<p><strong> <code>context</code> （或  <code>ctx</code> ）</strong></p>\n<p>显示当前调试的上下文信息，包括寄存器、堆栈、代码和内存映射等。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>context</code> ：显示默认的上下文信息。</li>\n<li><code>context code</code> ：仅显示代码段的反汇编。</li>\n<li><code>context regs</code> ：仅显示寄存器信息。</li>\n<li><code>context stack</code> ：仅显示堆栈内容。</li>\n<li><code>context all</code> ：显示所有可用的上下文信息。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>hexdump</code> </strong></p>\n<p>以十六进制形式显示内存内容。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>hexdump ADDRESS</code> ：从指定地址开始显示内存内容。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>telescope</code> </strong></p>\n<p>类似于  <code>hexdump</code> ，但提供更友好的内存查看方式，自动解析指针和字符串。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>telescope ADDRESS</code> ：从指定地址开始显示内存内容。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>vmmap</code> </strong></p>\n<p>显示当前进程的内存映射信息。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>vmmap</code> ：列出所有内存段及其权限。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>search</code> </strong></p>\n<p>在内存中搜索特定的字节序列或模式。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>search PATTERN</code> ：搜索指定的模式。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>pie</code> </strong></p>\n<p>处理位置无关可执行文件（PIE）的相关命令。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>pie breakpoint OFFSET</code> ：在偏移地址处设置断点。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>rop</code> </strong></p>\n<p>帮助查找 ROP（Return-Oriented Programming）小工具。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>rop</code> ：列出可用的 ROP 小工具。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>got</code>  和  <code>plt</code> </strong></p>\n<p>查看全局偏移量表（GOT）和过程链接表（PLT）。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>got</code> ：显示 GOT 表信息。</li>\n<li><code>plt</code> ：显示 PLT 表信息。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>aslr</code> </strong></p>\n<p>控制地址空间布局随机化（ASLR）。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>aslr on</code> ：启用 ASLR。</li>\n<li><code>aslr off</code> ：禁用 ASLR。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>elf-info</code> </strong></p>\n<p>显示当前可执行文件的 ELF 格式信息。</p>\n<ul>\n<li><strong>用法：</strong>\n<ul>\n<li><code>elf-info</code> ：显示 ELF 文件的段和节信息。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"pwndbg积累操作本人个人经常会用到的一些操作\"><a class=\"anchor\" href=\"#pwndbg积累操作本人个人经常会用到的一些操作\">#</a> pwndbg 积累操作 (本人个人经常会用到的一些操作)</h1>\n<h3 id=\"gdb-info-functions-win\"><a class=\"anchor\" href=\"#gdb-info-functions-win\">#</a> <strong>(<strong>gdb</strong>)</strong> <strong>info</strong> <strong>functions</strong> <strong>win</strong></h3>\n<p><strong>All</strong> <strong>functions</strong> <strong>matching</strong> <strong>regular</strong> <strong>expression</strong> <strong>&quot;win&quot;</strong>:  <strong>Non</strong>-<strong>debugging</strong> <strong>symbols:</strong></p>\n<p><strong>0</strong>x080484cb  <strong>win</strong></p>\n<p>还会更新</p>\n",
            "tags": [
                "CTF",
                "二进制安全",
                "二进制漏洞PWN",
                "工具使用",
                "CTF",
                "pwn",
                "二进制"
            ]
        },
        {
            "id": "https://0d0-1yp0.github.io/2024/11/12/Forensics/meiyacup2024%E5%86%85%E5%AD%98%E5%A4%8D%E7%9B%98/",
            "url": "https://0d0-1yp0.github.io/2024/11/12/Forensics/meiyacup2024%E5%86%85%E5%AD%98%E5%A4%8D%E7%9B%98/",
            "title": "Meiyacup2024菜鸟个人总结（一）",
            "date_published": "2024-11-11T16:00:00.000Z",
            "content_html": "<h1 id=\"meiyacup2024菜鸟个人总结一\"><a class=\"anchor\" href=\"#meiyacup2024菜鸟个人总结一\">#</a> Meiyacup2024 菜鸟个人总结（一）</h1>\n<blockquote>\n<p>以下内容仅用作个人复盘以及分享参考的思路。</p>\n<p>我已经菜得离谱了！！！这里没有好东西啦！</p>\n</blockquote>\n<p>去打 2024 美亚线下了，今年比去年弱了好多好多，比赛结果非常非常差<s>但是也是尽力了</s>一坨就是一坨</p>\n<p>比赛的时候，网断了才发现犯了非常离谱的错误，赛前明明注意到了内存取证题，但是没系统练过也没调试 volatility</p>\n<p><a href=\"http://xn--python3setup-bc3y.py\">python3 掉 setup.py</a>, 然后发现网上教程有敲 python3 vol.py 的，然后我发现可以直接敲 vol</p>\n<p>不太懂于是复盘之后 chat 了一下</p>\n<p><img loading=\"lazy\" data-src=\"https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220201123451.png\" alt=\"image-20241220201123451\" /></p>\n<p>事实上还发现了依赖项问题。因为我的 kali 中又有 python2 又有 python3, 总是产生一些奇奇怪怪的问题</p>\n<p>总之以后还是多用虚拟环境吧，正好 2024 的 kali 更新规则了</p>\n<h2 id=\"至于赛题\"><a class=\"anchor\" href=\"#至于赛题\">#</a> 至于赛题:</h2>\n<p>举个赛题的例子</p>\n<p>列出 firefox 的 pid</p>\n<p>比赛的时候不联网，个人赛时间紧迫又没法看 help。只能拿本地的 llama3.1 跑一下 vol 的命令，最后给的一堆人机指令</p>\n<p>这里就丢了 10 分，后面还有一个解压然后开火眼即取的手机镜像题也没拿到分，太着急了可能是</p>\n<p>这里的 20 分拿回来就是第二了，仅次于通天戴，可惜没有如果 == 难受了一整天</p>\n<p>美亚的内存取证工具什么都出不来，火眼的连镜像都打不开，除非 vol 否则一个都跑不出来</p>\n<p>以后一定好好复习</p>\n<p><img loading=\"lazy\" data-src=\"https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220200723671.png\" alt=\"image-20241220200723671\" /></p>\n<p>纪念一下自己人机级别蠢到家的指令</p>\n<p>正确做法：</p>\n<p>vol -f xxx.raw [plugin] -- 额外参数</p>\n<p>for example：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol <span class=\"token parameter variable\">-f</span> RAM_Capture_David_Laptop.raw windows.info</pre></td></tr></table></figure><p>结果：</p>\n<p><img loading=\"lazy\" data-src=\"https://blog-store-1325083740.cos.ap-beijing.myqcloud.com/image-20241220201219814.png\" alt=\"image-20241220201219814\" /></p>\n<p>出来了，windows 信息</p>\n<p><strong><strong>那么这道题的话</strong></strong></p>\n<p><code>vol -f RAM_Capture_David_Laptop.raw windows.pslist </code></p>\n<p>或者更好的</p>\n<p><code>vol -f RAM_Capture_David_Laptop.raw windows.pslist | grep &quot;firefox.exe&quot;</code></p>\n<p><img loading=\"lazy\" data-src=\"C:%5CUsers%5C86130%5CPictures%5C%E5%9B%BE%E5%BA%8A%5Cimage-20241220201247050.png\" alt=\"image-20241220201247050\" /></p>\n<p>o1-pre 会给出 vol -f RAM_Capture_David_Laptop.raw pslist 这个指令，但是 vol3.x 就不行了，因为这个比赛直接炸掉了</p>\n<p>为什么有时候大脑不转呢</p>\n",
            "tags": [
                "取证",
                "取证",
                "工具使用"
            ]
        }
    ]
}